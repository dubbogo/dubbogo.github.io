{
  "filename": "dubbogo_certificate_using_istio.md",
  "__html": "<p>本文介绍 dubbo go 如何获取到 istio 颁发的证书以及如何在 dubbo-go 的 rpc 通信中使用这些证书。</p>\n<h2>获取istio证书</h2>\n<p>分为有 istio-agent 和无 istio-agent 的情形。</p>\n<h3>存在istio-agent</h3>\n<p>istio-agent 是 istio 提供的辅助xds协议的 sidecar ，包括证书的获取、证书的过期检查等。</p>\n<p>此情形下，我们可以将证书的获取和更新工作交给 istio-agent ，应用侧只需要监听证书文件即可。</p>\n<p>可以用 annotation 拉起一个 istio-agent , 确保命名空间被打标签：<code>kubectl label namespace default istio-injection=enabled</code></p>\n<p>此处我们可以用 grpc-agent 来代替, spec 文件如下：</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-attr\">template:</span>\n    <span class=\"hljs-attr\">metadata:</span>\n      <span class=\"hljs-attr\">annotations:</span>\n        <span class=\"hljs-attr\">inject.istio.io/templates:</span> <span class=\"hljs-string\">grpc-agent</span>\n        <span class=\"hljs-attr\">proxy.istio.io/config:</span> <span class=\"hljs-string\">'{\"holdApplicationUntilProxyStarts\": true}'</span>\n</code></pre>\n<p>istio-agent 会注入环境变量<code>GRPC_XDS_BOOTSTRAP=/etc/istio/proxy/grpc-bootstrap.json</code>，告诉了我们 grpc-bootstrap.json 的位置，解析此 json 文件我们可以知道 certificate_file (公钥)、private_key_file (私钥)、ca_certificate_file ( isito-ca 的公钥)文件的位置，即可得到证书。</p>\n<p>grpc-bootstrap.json 文件示例如下：</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-string\">{</span>\n  <span class=\"hljs-attr\">\"xds_servers\":</span> <span class=\"hljs-string\">[</span>\n    <span class=\"hljs-string\">{</span>\n      <span class=\"hljs-attr\">\"server_uri\":</span> <span class=\"hljs-string\">\"unix:///etc/istio/proxy/XDS\"</span><span class=\"hljs-string\">,</span>\n      <span class=\"hljs-attr\">\"channel_creds\":</span> <span class=\"hljs-string\">[</span>\n        <span class=\"hljs-string\">{</span>\n          <span class=\"hljs-attr\">\"type\":</span> <span class=\"hljs-string\">\"insecure\"</span>\n        <span class=\"hljs-string\">}</span>\n      <span class=\"hljs-string\">],</span>\n      <span class=\"hljs-attr\">\"server_features\":</span> <span class=\"hljs-string\">[</span>\n        <span class=\"hljs-string\">\"xds_v3\"</span>\n      <span class=\"hljs-string\">]</span>\n    <span class=\"hljs-string\">}</span>\n  <span class=\"hljs-string\">],</span>\n  <span class=\"hljs-attr\">\"node\":</span> <span class=\"hljs-string\">{</span>\n    <span class=\"hljs-attr\">\"id\":</span> <span class=\"hljs-string\">\"sidecar~172.17.144.159~echo-v1-i3c-a-ed37cfb2-756bfffcbb-f4lws.echo-grpc~echo-grpc.svc.cluster.local\"</span><span class=\"hljs-string\">,</span>\n    <span class=\"hljs-attr\">\"metadata\":</span> <span class=\"hljs-string\">{</span>\n      <span class=\"hljs-attr\">\"ANNOTATIONS\":</span> <span class=\"hljs-string\">{</span>\n        <span class=\"hljs-attr\">\"dev.nocalhost/nocalhost-dev\":</span> <span class=\"hljs-string\">\"nocalhost-dev\"</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">\"inject.istio.io/templates\":</span> <span class=\"hljs-string\">\"grpc-agent\"</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">\"kubernetes.io/config.seen\":</span> <span class=\"hljs-string\">\"2022-07-03T22:39:22.131136080+08:00\"</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">\"kubernetes.io/config.source\":</span> <span class=\"hljs-string\">\"api\"</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">\"kubernetes.io/psp\":</span> <span class=\"hljs-string\">\"ack.privileged\"</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">\"prometheus.io/path\":</span> <span class=\"hljs-string\">\"/stats/prometheus\"</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">\"prometheus.io/port\":</span> <span class=\"hljs-string\">\"15020\"</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">\"prometheus.io/scrape\":</span> <span class=\"hljs-string\">\"true\"</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">\"proxy.istio.io/config\":</span> <span class=\"hljs-string\">\"{\\\"holdApplicationUntilProxyStarts\\\": true}\"</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">\"proxy.istio.io/overrides\":</span> <span class=\"hljs-string\">\"{\\\"containers\\\":[{\\\"name\\\":\\\"nocalhost-dev\\\",\\\"image\\\":\\\"nocalhost-docker.pkg.coding.net/nocalhost/dev-images/golang:1.16\\\",\\\"command\\\":[\\\"/bin/sh\\\",\\\"-c\\\",\\\"tail -f /dev/null\\\"],\\\"args\\\":[\\\"--metrics=15014\\\",\\\"--port\\\",\\\"18080\\\",\\\"--tcp\\\",\\\"19090\\\",\\\"--xds-grpc-server=17070\\\",\\\"--grpc\\\",\\\"17070\\\",\\\"--grpc\\\",\\\"17171\\\",\\\"--port\\\",\\\"3333\\\",\\\"--port\\\",\\\"8080\\\",\\\"--version\\\",\\\"v1\\\",\\\"--crt=/cert.crt\\\",\\\"--key=/cert.key\\\"],\\\"workingDir\\\":\\\"/home/nocalhost-dev\\\",\\\"ports\\\":[{\\\"containerPort\\\":17070,\\\"protocol\\\":\\\"TCP\\\"},{\\\"containerPort\\\":17171,\\\"protocol\\\":\\\"TCP\\\"},{\\\"containerPort\\\":8080,\\\"protocol\\\":\\\"TCP\\\"},{\\\"name\\\":\\\"tcp-health-port\\\",\\\"containerPort\\\":3333,\\\"protocol\\\":\\\"TCP\\\"}],\\\"env\\\":[{\\\"name\\\":\\\"INSTANCE_IP\\\",\\\"valueFrom\\\":{\\\"fieldRef\\\":{\\\"apiVersion\\\":\\\"v1\\\",\\\"fieldPath\\\":\\\"status.podIP\\\"}}}],\\\"resources\\\":{},\\\"volumeMounts\\\":[{\\\"name\\\":\\\"nocalhost-syncthing\\\",\\\"mountPath\\\":\\\"/var/syncthing\\\",\\\"subPath\\\":\\\"syncthing\\\"},{\\\"name\\\":\\\"nocalhost-syncthing-secret\\\",\\\"mountPath\\\":\\\"/var/syncthing/secret\\\"},{\\\"name\\\":\\\"nocalhost-shared-volume\\\",\\\"mountPath\\\":\\\"/home/nocalhost-dev\\\"},{\\\"name\\\":\\\"kube-api-access-g8v66\\\",\\\"readOnly\\\":true,\\\"mountPath\\\":\\\"/var/run/secrets/kubernetes.io/serviceaccount\\\"}],\\\"terminationMessagePath\\\":\\\"/dev/termination-log\\\",\\\"terminationMessagePolicy\\\":\\\"File\\\",\\\"imagePullPolicy\\\":\\\"Always\\\",\\\"securityContext\\\":{\\\"privileged\\\":true}},{\\\"name\\\":\\\"nocalhost-sidecar\\\",\\\"image\\\":\\\"nocalhost-docker.pkg.coding.net/nocalhost/public/nocalhost-sidecar:sshversion\\\",\\\"command\\\":[\\\"/bin/sh\\\",\\\"-c\\\"],\\\"args\\\":[\\\"rc-service sshd restart \\\\u0026\\\\u0026 unset STGUIADDRESS \\\\u0026\\\\u0026 cp /var/syncthing/secret/* /var/syncthing/ \\\\u0026\\\\u0026 /bin/entrypoint.sh \\\\u0026\\\\u0026 /bin/syncthing -home /var/syncthing\\\"],\\\"workingDir\\\":\\\"/home/nocalhost-dev\\\",\\\"resources\\\":{\\\"limits\\\":{\\\"cpu\\\":\\\"1\\\",\\\"memory\\\":\\\"1Gi\\\"},\\\"requests\\\":{\\\"cpu\\\":\\\"100m\\\",\\\"memory\\\":\\\"50Mi\\\"}},\\\"volumeMounts\\\":[{\\\"name\\\":\\\"nocalhost-syncthing\\\",\\\"mountPath\\\":\\\"/var/syncthing\\\",\\\"subPath\\\":\\\"syncthing\\\"},{\\\"name\\\":\\\"nocalhost-syncthing-secret\\\",\\\"mountPath\\\":\\\"/var/syncthing/secret\\\"},{\\\"name\\\":\\\"nocalhost-shared-volume\\\",\\\"mountPath\\\":\\\"/home/nocalhost-dev\\\"},{\\\"name\\\":\\\"kube-api-access-g8v66\\\",\\\"readOnly\\\":true,\\\"mountPath\\\":\\\"/var/run/secrets/kubernetes.io/serviceaccount\\\"}],\\\"terminationMessagePath\\\":\\\"/dev/termination-log\\\",\\\"terminationMessagePolicy\\\":\\\"File\\\",\\\"imagePullPolicy\\\":\\\"Always\\\"}]}\"</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">\"sidecar.istio.io/rewriteAppHTTPProbers\":</span> <span class=\"hljs-string\">\"false\"</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">\"sidecar.istio.io/status\":</span> <span class=\"hljs-string\">\"{\\\"initContainers\\\":null,\\\"containers\\\":[\\\"nocalhost-dev\\\",\\\"nocalhost-sidecar\\\",\\\"istio-proxy\\\"],\\\"volumes\\\":[\\\"workload-socket\\\",\\\"workload-certs\\\",\\\"istio-xds\\\",\\\"istio-data\\\",\\\"istio-podinfo\\\",\\\"istio-token\\\",\\\"istiod-ca-cert\\\"],\\\"imagePullSecrets\\\":null,\\\"revision\\\":\\\"default\\\"}\"</span>\n      <span class=\"hljs-string\">},</span>\n      <span class=\"hljs-attr\">\"APP_CONTAINERS\":</span> <span class=\"hljs-string\">\"nocalhost-dev,nocalhost-sidecar\"</span><span class=\"hljs-string\">,</span>\n      <span class=\"hljs-attr\">\"CLUSTER_ID\":</span> <span class=\"hljs-string\">\"Kubernetes\"</span><span class=\"hljs-string\">,</span>\n      <span class=\"hljs-attr\">\"ENVOY_PROMETHEUS_PORT\":</span> <span class=\"hljs-number\">15090</span><span class=\"hljs-string\">,</span>\n      <span class=\"hljs-attr\">\"ENVOY_STATUS_PORT\":</span> <span class=\"hljs-number\">15021</span><span class=\"hljs-string\">,</span>\n      <span class=\"hljs-attr\">\"GENERATOR\":</span> <span class=\"hljs-string\">\"grpc\"</span><span class=\"hljs-string\">,</span>\n      <span class=\"hljs-attr\">\"INSTANCE_IPS\":</span> <span class=\"hljs-string\">\"172.17.144.159\"</span><span class=\"hljs-string\">,</span>\n      <span class=\"hljs-attr\">\"INTERCEPTION_MODE\":</span> <span class=\"hljs-string\">\"REDIRECT\"</span><span class=\"hljs-string\">,</span>\n      <span class=\"hljs-attr\">\"ISTIO_PROXY_SHA\":</span> <span class=\"hljs-string\">\"6e1c8fd2905565dab1fec21ee9dc0dfbd2e056d8\"</span><span class=\"hljs-string\">,</span>\n      <span class=\"hljs-attr\">\"ISTIO_VERSION\":</span> <span class=\"hljs-string\">\"1.14.0\"</span><span class=\"hljs-string\">,</span>\n      <span class=\"hljs-attr\">\"LABELS\":</span> <span class=\"hljs-string\">{</span>\n        <span class=\"hljs-attr\">\"identifier\":</span> <span class=\"hljs-string\">\"i3c-a6-f6-55-c9-ab\"</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">\"nocalhost.dev.workload.ignored\":</span> <span class=\"hljs-string\">\"true\"</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">\"origin-workload-name\":</span> <span class=\"hljs-string\">\"echo-v1\"</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">\"origin-workload-type\":</span> <span class=\"hljs-string\">\"deployment\"</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">\"pod-template-hash\":</span> <span class=\"hljs-string\">\"756bfffcbb\"</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">\"service.istio.io/canonical-name\":</span> <span class=\"hljs-string\">\"echo-v1-i3c-a-ed37cfb2\"</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">\"service.istio.io/canonical-revision\":</span> <span class=\"hljs-string\">\"latest\"</span>\n      <span class=\"hljs-string\">},</span>\n      <span class=\"hljs-attr\">\"MESH_ID\":</span> <span class=\"hljs-string\">\"cluster.local\"</span><span class=\"hljs-string\">,</span>\n      <span class=\"hljs-attr\">\"NAME\":</span> <span class=\"hljs-string\">\"echo-v1-i3c-a-ed37cfb2-756bfffcbb-f4lws\"</span><span class=\"hljs-string\">,</span>\n      <span class=\"hljs-attr\">\"NAMESPACE\":</span> <span class=\"hljs-string\">\"echo-grpc\"</span><span class=\"hljs-string\">,</span>\n      <span class=\"hljs-attr\">\"OWNER\":</span> <span class=\"hljs-string\">\"kubernetes://apis/apps/v1/namespaces/echo-grpc/deployments/echo-v1-i3c-a-ed37cfb2\"</span><span class=\"hljs-string\">,</span>\n      <span class=\"hljs-attr\">\"PILOT_SAN\":</span> <span class=\"hljs-string\">[</span>\n        <span class=\"hljs-string\">\"istiod.istio-system.svc\"</span>\n      <span class=\"hljs-string\">],</span>\n      <span class=\"hljs-attr\">\"POD_PORTS\":</span> <span class=\"hljs-string\">\"[{\\\"containerPort\\\":17070,\\\"protocol\\\":\\\"TCP\\\"},{\\\"containerPort\\\":17171,\\\"protocol\\\":\\\"TCP\\\"},{\\\"containerPort\\\":8080,\\\"protocol\\\":\\\"TCP\\\"},{\\\"name\\\":\\\"tcp-health-port\\\",\\\"containerPort\\\":3333,\\\"protocol\\\":\\\"TCP\\\"}]\"</span><span class=\"hljs-string\">,</span>\n      <span class=\"hljs-attr\">\"PROV_CERT\":</span> <span class=\"hljs-string\">\"var/run/secrets/istio/root-cert.pem\"</span><span class=\"hljs-string\">,</span>\n      <span class=\"hljs-attr\">\"PROXY_CONFIG\":</span> <span class=\"hljs-string\">{</span>\n        <span class=\"hljs-attr\">\"binaryPath\":</span> <span class=\"hljs-string\">\"/usr/local/bin/envoy\"</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">\"concurrency\":</span> <span class=\"hljs-number\">2</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">\"configPath\":</span> <span class=\"hljs-string\">\"./etc/istio/proxy\"</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">\"controlPlaneAuthPolicy\":</span> <span class=\"hljs-string\">\"MUTUAL_TLS\"</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">\"discoveryAddress\":</span> <span class=\"hljs-string\">\"istiod.istio-system.svc:15012\"</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">\"drainDuration\":</span> <span class=\"hljs-string\">\"45s\"</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">\"holdApplicationUntilProxyStarts\":</span> <span class=\"hljs-literal\">true</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">\"parentShutdownDuration\":</span> <span class=\"hljs-string\">\"60s\"</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">\"proxyAdminPort\":</span> <span class=\"hljs-number\">15000</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">\"serviceCluster\":</span> <span class=\"hljs-string\">\"istio-proxy\"</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">\"statNameLength\":</span> <span class=\"hljs-number\">189</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">\"statusPort\":</span> <span class=\"hljs-number\">15020</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">\"terminationDrainDuration\":</span> <span class=\"hljs-string\">\"5s\"</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">\"tracing\":</span> <span class=\"hljs-string\">{</span>\n          <span class=\"hljs-attr\">\"zipkin\":</span> <span class=\"hljs-string\">{</span>\n            <span class=\"hljs-attr\">\"address\":</span> <span class=\"hljs-string\">\"zipkin.istio-system:9411\"</span>\n          <span class=\"hljs-string\">}</span>\n        <span class=\"hljs-string\">}</span>\n      <span class=\"hljs-string\">},</span>\n      <span class=\"hljs-attr\">\"SERVICE_ACCOUNT\":</span> <span class=\"hljs-string\">\"default\"</span><span class=\"hljs-string\">,</span>\n      <span class=\"hljs-attr\">\"WORKLOAD_NAME\":</span> <span class=\"hljs-string\">\"echo-v1-i3c-a-ed37cfb2\"</span>\n    <span class=\"hljs-string\">},</span>\n    <span class=\"hljs-attr\">\"locality\":</span> <span class=\"hljs-string\">{},</span>\n    <span class=\"hljs-attr\">\"UserAgentVersionType\":</span> <span class=\"hljs-literal\">null</span>\n  <span class=\"hljs-string\">},</span>\n  <span class=\"hljs-attr\">\"certificate_providers\":</span> <span class=\"hljs-string\">{</span>\n    <span class=\"hljs-attr\">\"default\":</span> <span class=\"hljs-string\">{</span>\n      <span class=\"hljs-attr\">\"plugin_name\":</span> <span class=\"hljs-string\">\"file_watcher\"</span><span class=\"hljs-string\">,</span>\n      <span class=\"hljs-attr\">\"config\":</span> <span class=\"hljs-string\">{</span>\n        <span class=\"hljs-attr\">\"certificate_file\":</span> <span class=\"hljs-string\">\"/var/lib/istio/data/cert-chain.pem\"</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">\"private_key_file\":</span> <span class=\"hljs-string\">\"/var/lib/istio/data/key.pem\"</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">\"ca_certificate_file\":</span> <span class=\"hljs-string\">\"/var/lib/istio/data/root-cert.pem\"</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">\"refresh_interval\":</span> <span class=\"hljs-string\">\"900s\"</span>\n      <span class=\"hljs-string\">}</span>\n    <span class=\"hljs-string\">}</span>\n  <span class=\"hljs-string\">},</span>\n  <span class=\"hljs-attr\">\"server_listener_resource_name_template\":</span> <span class=\"hljs-string\">\"xds.istio.io/grpc/lds/inbound/%s\"</span>\n<span class=\"hljs-string\">}#</span>\n</code></pre>\n<h3>不存在istio-agent</h3>\n<p>没有 istio-agent 的情况下，我们需要通过在应用侧生成公钥、私钥并通过 Grpc 协议与 istio-ca 通信签署证书。在通信之前，\nistio-ca 需要请求方放验证自己的身份，其通过 kubernetes 的 serviceaccount ( JWT 形式)来进行验证。众所周知，pod 在启动的时候都会默认被 kubernetes 挂载一个 serviceaccount 。</p>\n<p>istio 对JWT的验证( JWT_POLICY )分为 first-party-jwt 和third-party-jwt ，说明如下：</p>\n<blockquote>\n<p>To authenticate with the Istio control plane, the Istio proxy will use a Service Account token. Kubernetes supports two forms of these tokens:</p>\n<ul>\n<li>Third party tokens, which have a scoped audience and expiration.</li>\n<li>First party tokens, which have no expiration and are mounted into all pods.<br>\nBecause the properties of the first party token are less secure, Istio will default to using third party tokens. However, this feature is not enabled on all Kubernetes platforms.</li>\n</ul>\n</blockquote>\n<p>简单来说，first-party-jwt 不会验证aud字段，third-party-jwt 会验证 aud 字段，但为了兼容低版本 kubernetes 当 aud 字段不存在时不会验证 aud 。</p>\n<p>kubernetes 版本&lt;=1.21.x时，kubernetes 挂载到 pod 上的 serviceaccount 里没有 aud 字段，所以 istio 也会放行这种 serviceaccount 。</p>\n<p>kubernetes 版本&gt;1.21.x时, serviceaccount 会有 aud 字段，在 third-party-jwt 模式下，istio 只允许 aud=istio-ca 的s erviceaccount 通过。所以这种情况下，我们只能给 dubbo-go 应用容器挂载 aud=isito-ca 的 serviceaccount ，spec 配置如下：</p>\n<pre><code class=\"language-yaml\">    <span class=\"hljs-attr\">spec:</span>\n      <span class=\"hljs-attr\">containers:</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">zlber/dubbo-go-client:1.0.0</span>    <span class=\"hljs-comment\">#我的镜像是从本地的Harbor上拉取</span>\n          <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">istio-ca</span>                                 <span class=\"hljs-comment\">#镜像名称</span>\n          <span class=\"hljs-attr\">env:</span>\n           <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">POD_NAME</span>\n             <span class=\"hljs-attr\">valueFrom:</span>\n               <span class=\"hljs-attr\">fieldRef:</span>\n                 <span class=\"hljs-attr\">fieldPath:</span> <span class=\"hljs-string\">metadata.name</span>\n           <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">POD_NAMESPACE</span>\n             <span class=\"hljs-attr\">valueFrom:</span>\n               <span class=\"hljs-attr\">fieldRef:</span>\n                 <span class=\"hljs-attr\">fieldPath:</span> <span class=\"hljs-string\">metadata.namespace</span>\n          <span class=\"hljs-attr\">securityContext:</span>\n            <span class=\"hljs-attr\">privileged:</span> <span class=\"hljs-literal\">true</span>\n          <span class=\"hljs-attr\">volumeMounts:</span>\n            <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">mountPath:</span> <span class=\"hljs-string\">/var/run/secrets/tokens</span>\n              <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">istio-token</span>\n      <span class=\"hljs-attr\">volumes:</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">istio-token</span>\n          <span class=\"hljs-attr\">projected:</span>\n            <span class=\"hljs-attr\">defaultMode:</span> <span class=\"hljs-number\">420</span>\n            <span class=\"hljs-attr\">sources:</span>\n              <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">serviceAccountToken:</span>\n                  <span class=\"hljs-attr\">audience:</span> <span class=\"hljs-string\">istio-ca</span>\n                  <span class=\"hljs-attr\">expirationSeconds:</span> <span class=\"hljs-number\">43200</span>\n                  <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">istio-token</span>\n</code></pre>\n<p>或者我们可以修改 isito 的 JWT 策略，改成 first-party-jwt ，在 istio 启动的时候加入如下设置：</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-string\">--set</span> <span class=\"hljs-string\">values.global.jwtPolicy=first-party-jwt</span>\n</code></pre>\n<p>通信之前，客户端也需要验证 istio-ca 的身份，此处是通过 root-cert 进行验证，所以需要将 istio 的 root-cert 挂载到容器中。相关挂载配置如下：</p>\n<pre><code class=\"language-yaml\">  <span class=\"hljs-attr\">volumes:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">configMap:</span>\n      <span class=\"hljs-attr\">defaultMode:</span> <span class=\"hljs-number\">420</span>\n      <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">istio-ca-root-cert</span>\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">istiod-ca-cert</span>\n   \n   <span class=\"hljs-attr\">volumeMounts:</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">mountPath:</span> <span class=\"hljs-string\">/var/run/secrets/istio</span>\n      <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">istiod-ca-cert</span>\n    <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">mountPath:</span> <span class=\"hljs-string\">/var/lib/istio/data</span>    \n</code></pre>\n<p>至此，无论通过哪种方式我们都获取到了istio-ca颁发的证书。</p>\n<h2>使用isitio证书</h2>\n<h3>获取证书管理器：</h3>\n<p>在此之前确保上面的步骤都正确，才能获取到证书。</p>\n<pre><code class=\"language-yaml\">  <span class=\"hljs-string\">//获取证书管理器</span>\n  <span class=\"hljs-string\">manager,</span> <span class=\"hljs-string\">_</span> <span class=\"hljs-string\">:=</span> <span class=\"hljs-string\">NewCertManager()</span>\n  <span class=\"hljs-string\">//获取证书</span>\n    <span class=\"hljs-string\">cert,</span> <span class=\"hljs-string\">_</span> <span class=\"hljs-string\">:=</span> <span class=\"hljs-string\">manager.GetCertificate()</span>\n   <span class=\"hljs-string\">//获取根证书</span>\n    <span class=\"hljs-string\">root,</span> <span class=\"hljs-string\">_</span> <span class=\"hljs-string\">:=</span> <span class=\"hljs-string\">manager.GetRootCertificate()</span>\n</code></pre>\n<p>注意:isito-ca 签署的证书不能添加 SAN(Subject Alternative Name) ，而是通过uri进行标识，例如：URI:spiffe://cluster.local/ns/default/sa/default，但 Grpc 的 credentials.NewTLS 在 tls 握手阶段会校验 ServerName 与证书上的 SAN 是否一直，所以会导致证书校验不通过，可以通过配置 InsecureSkipVerify: true 跳过证书校验。若是想校验证书，可以通过自己实现 <code>credentials.TransportCredentials</code> 校验 uri 。</p>\n<h3>server端：</h3>\n<pre><code class=\"language-yaml\"><span class=\"hljs-string\">func</span> <span class=\"hljs-string\">server(manager</span> <span class=\"hljs-string\">CertManager)</span> <span class=\"hljs-string\">{</span>\n\n    <span class=\"hljs-string\">cert,</span> <span class=\"hljs-string\">_</span> <span class=\"hljs-string\">:=</span> <span class=\"hljs-string\">manager.GetCertificate()</span>\n    <span class=\"hljs-string\">root,</span> <span class=\"hljs-string\">_</span> <span class=\"hljs-string\">:=</span> <span class=\"hljs-string\">manager.GetRootCertificate()</span>\n\n    <span class=\"hljs-string\">tlsConf</span> <span class=\"hljs-string\">:=</span> <span class=\"hljs-string\">&amp;tls.Config{</span>\n        <span class=\"hljs-attr\">ServerName:</span>   <span class=\"hljs-string\">\"spiffe://cluster.local/ns/default/sa/default\"</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">ClientAuth:</span>   <span class=\"hljs-string\">tls.RequireAndVerifyClientCert,</span>\n        <span class=\"hljs-attr\">Certificates:</span> <span class=\"hljs-string\">cert,</span>\n        <span class=\"hljs-attr\">ClientCAs:</span>    <span class=\"hljs-string\">root,</span>  \n        <span class=\"hljs-attr\">InsecureSkipVerify:</span> <span class=\"hljs-literal\">true</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">VerifyPeerCertificate:</span> <span class=\"hljs-string\">func(rawCerts</span> <span class=\"hljs-string\">[][]byte,</span> <span class=\"hljs-string\">verifiedChains</span> <span class=\"hljs-string\">[][]*x509.Certificate)</span> <span class=\"hljs-string\">error</span> <span class=\"hljs-string\">{</span>\n            <span class=\"hljs-string\">//添加自己的证书校验逻辑</span>\n      <span class=\"hljs-string\">return</span> <span class=\"hljs-string\">nil</span>\n        <span class=\"hljs-string\">},</span>\n    <span class=\"hljs-string\">}</span>\n\n    <span class=\"hljs-string\">//</span> <span class=\"hljs-string\">开启服务端监听</span>\n    <span class=\"hljs-string\">listener,</span> <span class=\"hljs-string\">err</span> <span class=\"hljs-string\">:=</span> <span class=\"hljs-string\">net.Listen(\"tcp\",</span> <span class=\"hljs-string\">\"127.0.0.1:8000\"</span><span class=\"hljs-string\">)</span>\n    <span class=\"hljs-string\">if</span> <span class=\"hljs-string\">err</span> <span class=\"hljs-string\">!=</span> <span class=\"hljs-string\">nil</span> <span class=\"hljs-string\">{</span>\n        <span class=\"hljs-string\">panic(err)</span>\n    <span class=\"hljs-string\">}</span>\n    <span class=\"hljs-string\">defer</span> <span class=\"hljs-string\">listener.Close()</span>\n\n    <span class=\"hljs-string\">server</span> <span class=\"hljs-string\">:=</span> <span class=\"hljs-string\">grpc.NewServer(grpc.Creds(credentials.NewTLS(tlsConf)))</span>\n\n    <span class=\"hljs-string\">RegisterHelloWorldServer(server,</span> <span class=\"hljs-string\">NewHelloService())</span>\n\n    <span class=\"hljs-string\">server.Serve(listener)</span>\n<span class=\"hljs-string\">}</span>\n</code></pre>\n<h3>client端：</h3>\n<pre><code class=\"language-yaml\"><span class=\"hljs-string\">func</span> <span class=\"hljs-string\">client(manager</span> <span class=\"hljs-string\">CertManager)</span> <span class=\"hljs-string\">{</span>\n    <span class=\"hljs-string\">time.Sleep(time.Second</span> <span class=\"hljs-string\">*</span> <span class=\"hljs-number\">2</span><span class=\"hljs-string\">)</span>\n    <span class=\"hljs-string\">cert,</span> <span class=\"hljs-string\">_</span> <span class=\"hljs-string\">:=</span> <span class=\"hljs-string\">manager.GetCertificate()</span>\n    <span class=\"hljs-string\">root,</span> <span class=\"hljs-string\">_</span> <span class=\"hljs-string\">:=</span> <span class=\"hljs-string\">manager.GetRootCertificate()</span>\n\n    <span class=\"hljs-string\">creds</span> <span class=\"hljs-string\">:=</span> <span class=\"hljs-string\">credentials.NewTLS(&amp;tls.Config{</span>\n        <span class=\"hljs-attr\">ServerName:</span>   <span class=\"hljs-string\">\"spiffe://cluster.local/ns/default/sa/default\"</span><span class=\"hljs-string\">,</span>\n        <span class=\"hljs-attr\">Certificates:</span> <span class=\"hljs-string\">cert,</span>\n        <span class=\"hljs-attr\">RootCAs:</span>      <span class=\"hljs-string\">root,</span>\n        <span class=\"hljs-attr\">VerifyPeerCertificate:</span> <span class=\"hljs-string\">func(rawCerts</span> <span class=\"hljs-string\">[][]byte,</span> <span class=\"hljs-string\">verifiedChains</span> <span class=\"hljs-string\">[][]*x509.Certificate)</span> <span class=\"hljs-string\">error</span> <span class=\"hljs-string\">{</span>\n          <span class=\"hljs-string\">//添加自己的证书校验逻辑</span>\n      <span class=\"hljs-string\">return</span> <span class=\"hljs-string\">nil</span>\n        <span class=\"hljs-string\">},</span>\n        <span class=\"hljs-attr\">InsecureSkipVerify:</span> <span class=\"hljs-literal\">true</span><span class=\"hljs-string\">,</span>\n    <span class=\"hljs-string\">})</span>\n    <span class=\"hljs-string\">fmt.Println(creds)</span>\n    <span class=\"hljs-string\">clientCredentials,</span> <span class=\"hljs-string\">err</span> <span class=\"hljs-string\">:=</span> <span class=\"hljs-string\">xds.NewClientCredentials(xds.ClientOptions{</span>\n        <span class=\"hljs-attr\">FallbackCreds:</span> <span class=\"hljs-string\">insecure.NewCredentials(),</span>\n    <span class=\"hljs-string\">})</span>\n    <span class=\"hljs-string\">fmt.Println(clientCredentials,</span> <span class=\"hljs-string\">err)</span>\n    <span class=\"hljs-string\">conn,</span> <span class=\"hljs-string\">err</span> <span class=\"hljs-string\">:=</span> <span class=\"hljs-string\">grpc.Dial(\"127.0.0.1:8000\",</span> <span class=\"hljs-string\">grpc.WithTransportCredentials(creds))</span>\n    <span class=\"hljs-string\">if</span> <span class=\"hljs-string\">err</span> <span class=\"hljs-string\">!=</span> <span class=\"hljs-string\">nil</span> <span class=\"hljs-string\">{</span>\n        <span class=\"hljs-string\">panic(err)</span>\n    <span class=\"hljs-string\">}</span>\n    <span class=\"hljs-string\">defer</span> <span class=\"hljs-string\">conn.Close()</span>\n\n    <span class=\"hljs-string\">grpcClient</span> <span class=\"hljs-string\">:=</span> <span class=\"hljs-string\">NewHelloWorldClient(conn)</span>\n\n    <span class=\"hljs-string\">say,</span> <span class=\"hljs-string\">err</span> <span class=\"hljs-string\">:=</span> <span class=\"hljs-string\">grpcClient.SayHelloWorld(context.Background(),</span> <span class=\"hljs-string\">&amp;HelloWorldRequest{</span>\n        <span class=\"hljs-attr\">Referer:</span> <span class=\"hljs-string\">\"hello\"</span><span class=\"hljs-string\">,</span>\n    <span class=\"hljs-string\">})</span>\n    <span class=\"hljs-string\">fmt.Println(say)</span>\n<span class=\"hljs-string\">}</span>\n</code></pre>\n<h2>参考</h2>\n<p><a href=\"https://istio.io/latest/docs/ops/best-practices/security/#configure-third-party-service-account-tokens\">https://istio.io/latest/docs/ops/best-practices/security/#configure-third-party-service-account-tokens</a></p>\n",
  "link": "/zh-cn/docs/user/tasks/mesh/dubbogo_certificate_using_istio.html",
  "meta": {
    "title": "dubbo-go 获取isito 证书并使用",
    "keywords": "dubbo-go 获取isito 证书并使用",
    "description": "dubbo-go 获取 isito 证书并使用"
  }
}